package model;
// Generated 21 Feb 2016 9:49:20 PM by Hibernate Tools 4.3.1


import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name="user"
    ,catalog="clienteledbsystem"
    , uniqueConstraints = {@UniqueConstraint(columnNames="user_name"), @UniqueConstraint(columnNames="account_account_id")} 
)
public class User  implements java.io.Serializable {


     private UserId id;
     private Account account;
     private String userPassword;

    public User() {
    }

	
    public User(UserId id, Account account) {
        this.id = id;
        this.account = account;
    }
    public User(UserId id, Account account, String userPassword) {
       this.id = id;
       this.account = account;
       this.userPassword = userPassword;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="userName", column=@Column(name="user_name", unique=true, nullable=false, length=200) ), 
        @AttributeOverride(name="accountAccountId", column=@Column(name="account_account_id", unique=true, nullable=false) ) } )
    public UserId getId() {
        return this.id;
    }
    
    public void setId(UserId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="account_account_id", unique=true, nullable=false, insertable=false, updatable=false)
    public Account getAccount() {
        return this.account;
    }
    
    public void setAccount(Account account) {
        this.account = account;
    }

    
    @Column(name="user_password", length=45)
    public String getUserPassword() {
        return this.userPassword;
    }
    
    public void setUserPassword(String userPassword) {
        this.userPassword = userPassword;
    }




}


